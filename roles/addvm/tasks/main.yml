---

- name: Copy template
  shell: |
    qm clone {{ args_template }} {{ args_vmid }} --full --name "{{ args_proxmox_name }}"
    if [ "$?" -eq "0" ]; then
      echo "CHANGED"
    else
      echo "FAILED"
    fi
  register: result
  changed_when: '"CHANGED" in result.stdout'
  failed_when: '"FAILED" in result.stdout'

- name: Set network1
  shell: |
    net=model=virtio,macaddr={{ args_vm_mac }},bridge=vmbr0,firewall=1
    if [ "{{ args_vm_vlan }}" -gt "0" ]; then
      net=$net,tag={{ args_vm_vlan }}
    fi
    echo $net
    qm set {{ args_vmid }} --net0 $net
    if [ "$?" -eq "0" ]; then
      echo "CHANGED"
    else
      echo "FAILED"
    fi
  when: args_vm_mac is defined
  register: result
  changed_when: '"CHANGED" in result.stdout'
  failed_when: '"FAILED" in result.stdout'

- name: Set network2
  shell: |
    net=model=virtio,macaddr={{ args_vm_mac2 }},bridge=vmbr0,firewall=1
    if [ "{{ args_vm_vlan2 | default('0') }}" -gt "0" ]; then
      net=$net,tag={{ args_vm_vlan2 }}
    fi
    echo $net
    qm set {{ args_vmid }} --net1 $net
    if [ "$?" -eq "0" ]; then
      echo "CHANGED"
    else
      echo "FAILED"
    fi
  when: args_vm_mac2 is defined
  register: result
  changed_when: '"CHANGED" in result.stdout'
  failed_when: '"FAILED" in result.stdout'

- name: Set memory
  shell: 'qm set {{ args_vmid }} --memory {{ args_vm_memory }} >/dev/null 2>&1 ; echo $?'
  register: result
  changed_when: '"0" in result.stdout'

- name: Set cores
  shell: 'qm set {{ args_vmid }} --cores {{ args_vm_cores }} >/dev/null 2>&1 ; echo $?'
  register: result
  changed_when: '"0" in result.stdout'

- name: Set boot start
  shell: 'qm set {{ args_vmid }} --onboot {{ args_vm_start_boot }} >/dev/null 2>&1 ; echo $?'
  register: result
  changed_when: '"0" in result.stdout'

